diff --git a/node_modules/sails/lib/util/check-origin-url.js b/node_modules/sails/lib/util/check-origin-url.js
index 84e6bbe..4c3e12c 100644
--- a/node_modules/sails/lib/util/check-origin-url.js
+++ b/node_modules/sails/lib/util/check-origin-url.js
@@ -26,9 +26,9 @@ module.exports = function checkOriginUrl(originUrl) {
     throw flaverr('E_INVALID', new Error('Must specify a non-empty string, but instead got: '+util.inspect(originUrl, {depth: null})));
   }
 
-  if (!originUrl.match(/^https?:\/\//)) {
-    throw flaverr('E_INVALID', new Error('Must specify a protocol like http:// or https://, but instead got: '+originUrl));
-  }
+//  if (!originUrl.match(/^https?:\/\//)) {
+//    throw flaverr('E_INVALID', new Error('Must specify a protocol like http:// or https://, but instead got: '+originUrl));
+//  }
 
   // Now do a mostly-correct parse of the URL.
   var parsedOriginUrl = url.parse(originUrl);
@@ -43,9 +43,9 @@ module.exports = function checkOriginUrl(originUrl) {
   }
 
   // Ensure there is no path or query string or fragment or anything like that.
-  if (parsedOriginUrl.pathname !== '/' || parsedOriginUrl.path !== '/') {
-    throw flaverr('E_INVALID', new Error('Should not specify a path, query string, URL fragment, or anything like that (but instead, got `'+originUrl+'`)'));
-  }
+//  if (parsedOriginUrl.pathname !== '/' || parsedOriginUrl.path !== '/') {
+//    throw flaverr('E_INVALID', new Error('Should not specify a path, query string, URL fragment, or anything like that (but instead, got `'+originUrl+'`)'));
+//  }
 
   // Ensure there is no trailing slice
   var lastCharacter = originUrl.slice(-1);
